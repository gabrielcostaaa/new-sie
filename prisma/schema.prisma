// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       Int               @id @default(autoincrement()) // ID único para cada usuário, gerado automaticamente com autoincrement
  user_name     String
  user_password String
  user_cpf      String            @unique // CPF do usuário, deve ser único para garantir a identificação individual
  user_rg       String
  user_email    String            @unique // Email do usuário, deve ser único para evitar duplicação de contas
  user_number   String
  user_nationality String
  user_state    String
  user_city     String
  user_occupation String
  user_city_work String
  user_entity   String
  user_number_work String?
  user_avatar   String?
  user_createdAt DateTime         @default(now())   // Data e hora de criação do registro, padrão é a data e hora atuais
  user_updatedAt DateTime         @updatedAt // Data e hora da última atualização do registro, atualizado automaticamente
  user_isDeleted Boolean          @default(false) // Campo para exclusão lógica, padrão é false (não deletado)
  
  permissions   UserPermission[]
}

model Permission {
  permission_id   Int               @id @default(autoincrement()) // ID único para cada permissão, gerado automaticamente com autoincrement
  permission_name String            @unique // Nome da permissão, deve ser único para evitar duplicação
  description     String?           // Descrição opcional da permissão
  
  users           UserPermission[]
}

model UserPermission {
  user_id       Int
  permission_id Int
  assignedAt    DateTime            @default(now()) // Data e hora de atribuição da permissão, padrão é a data e hora atuais
  
  user          User                @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  permission    Permission          @relation(fields: [permission_id], references: [permission_id], onDelete: Cascade)
  
  @@id([user_id, permission_id])
}

